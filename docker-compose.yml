version: '3.2'
services:
  broker-db:
    image: "postgres:9.6"
    environment:
      POSTGRES_USER: "searchbroker"
      POSTGRES_PASSWORD: "searchbroker"
      POSTGRES_DB: "searchbroker"
    ports:
    - "${BROKER_DB_PORT:-5432}:5432"
    volumes:
    - "broker-db-data:/var/lib/postgresql/data"

  broker:
    image: "samply/searchbroker:feature-structureQuery"
    environment:
      POSTGRES_HOST: "broker-db"
      POSTGRES_DB: "searchbroker"
      POSTGRES_USER: "searchbroker"
      POSTGRES_PASS: "searchbroker"
      STRUCTURED_QUERY_USERNAME: "test123"
      STRUCTURED_QUERY_PASSWORD: "test123"
    depends_on:
    - broker-db

  blaze:
    image: "samply/blaze:0.15"
    environment:
      BASE_URL: "http://blaze:8080"
      JAVA_TOOL_OPTIONS: "-Xmx4g"
      LOG_LEVEL: "debug"
      ENFORCE_REFERENTIAL_INTEGRITY: "false"
    ports:
    - "8090:8080"
    - "8093:8081"
    volumes:
    - "blaze-data:/app/data"

  dktk-fed-search-share-db:
    image: "postgres:14"
    environment:
      POSTGRES_USER: "dktk-fed-search-share"
      POSTGRES_PASSWORD: "dktk-fed-search-share"
      POSTGRES_DB: "dktk-fed-search-share"
    ports:
    - "${DKTK_FED_SEARCH_SHARE_DB_PORT:-5433}:5432"
    volumes:
    - "dktk-fed-search-share-db-data:/var/lib/postgresql/data"

  dktk-fed-search-share:
    image: "ghcr.io/samply/dktk-fed-search-share:pr-1"
    #build: .
    environment:
      APP_BROKER_BASEURL: "http://broker:8080/broker/rest/searchbroker"
      APP_BROKER_MAIL: "foo@bar.de"
      APP_STORE_BASEURL: "http://blaze:8080/fhir"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://dktk-fed-search-share-db:5432/dktk-fed-search-share"
      JAVA_TOOL_OPTIONS: "-Xmx1g"
    ports:
    - "8080:8080"
    depends_on:
    - dktk-fed-search-share-db
    - broker
    - blaze

  gui-backend:
    image: "ghcr.io/num-codex/codex-feasibility-backend:1.0.0-arm"
    ports:
    - "${GUI_BACKEND_PORT:-8091}:8090"
    depends_on:
    - gui-backend-db
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://gui-backend-db:5432/gui?currentSchema=codex"
      SPRING_DATASOURCE_USERNAME: "dktk"
      SPRING_DATASOURCE_PASSWORD: "dktk"
      BROKER_CLIENT_MOCK_ENABLED: "false"
      KEYCLOAK_ENABLED: "false"
      CQL_TRANSLATE_ENABLED: "false"
    volumes:
    - ./ontology/ui_profiles:/opt/codex-feasibility-backend/ontology/ui_profiles
    - ./ontology/codex-code-tree.json:/opt/codex-feasibility-backend/ontology/conceptTree.json:ro
    - ./ontology/codex-term-code-mapping.json:/opt/codex-feasibility-backend/ontology/termCodeMapping.json:ro

  gui-backend-db:
    image: 'postgres:13.1-alpine'
    environment:
      POSTGRES_USER: dktk
      POSTGRES_PASSWORD: dktk
      POSTGRES_DB: gui

  gui:
    image: "ghcr.io/samply/dktk-feasibility-gui:latest"
    ports:
    - "${GUI_PORT:-8092}:8080"
    depends_on:
    - gui-backend
    - broker
    - keycloak
    volumes:
    - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    - ./gui/deploy-config.json:/usr/share/nginx/html/assets/config/config.deploy.json:ro

  keycloak-db:
    image: postgres:14-alpine
    environment:
      POSTGRES_PASSWORD: keycloak
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
    volumes:
    - "keycloak-db-data:/var/lib/postgresql/data"

  keycloak:
    image: jboss/keycloak:15.0.2
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: keycloak-db
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: keycloak
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      PROXY_ADDRESS_FORWARDING: "true"
      KEYCLOAK_IMPORT: /tmp/initial-realm.json
      KEYCLOAK_FRONTEND_URL: http://localhost:8092/auth
    volumes:
    - ./keycloak/initial-realm.json:/tmp/initial-realm.json
    depends_on:
    - keycloak-db

volumes:
  blaze-data:
  broker-db-data:
  dktk-fed-search-share-db-data:
  keycloak-db-data:
